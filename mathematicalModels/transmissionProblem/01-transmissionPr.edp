// Transmission Problem
// L-shaped domain with 3 diagonals as internal boundaries, defining 4 sub-domains:

// Mesh
border a(t=0, 1){x=t; y=0;};
border b(t=0, 0.5){x=1; y=t;};
border c(t=0, 0.5){x=1-t; y=0.5;};
border d(t=0.5, 1){x=0.5; y=t;};
border e(t=0.5, 1){x=1-t; y=1;};
border f(t=0, 1){x=0; y=1-t;};
border i1(t=0, 0.5){x=t; y=1-t;};
border i2(t=0, 0.5){x=t; y=t;};
border i3(t=0, 0.5){x=1-t; y=t;};

mesh th = buildmesh(a(6) + b(4) + c(4) + d(4) + e(4)
	+ f(6) + i1(6) + i2(6) + i3(6));
	
plot(th, wait=1, cmm="Mesh definition");

// Fespace
fespace Ph(th, P0);		// constant discontinuos functions / element
Ph reg=region;			// defined the P0 function associated to region number

fespace Vh(th, P2);
Vh u, v;

// Plot
plot(reg, fill=1, wait=1, value=1, cmm="Regions definition");

// To get the number of a region containg a particular point one does:
// Characteristic function
int nupper = reg(0.4, 0.9);		//get the region number of point (0.4, 0.9)
int nlower = reg(0.9, 0.1);		//get the region number of point (0.9, 0.1)

cout << "nlower = " << nlower << ", nupper = " << nupper << endl;
Ph nu = 1 + 5*(region==nlower) + 10*(region==nupper);

// Plot
plot(nu, fill=1, wait=1, cmm="Regions 2", value=1);

// Lapace Problem
solve lap(u, v)
	= int2d(th)(
		nu*(dx(u)*dx(v) + dy(u)*dy(v))
	)
	+ int2d(th)(
		-1 * v
	)
	+ on(a, b, c, d, e, f, u=0)
	;
	
// Plot
plot(u, value=1, wait=1, cmm="Solve Lapalce Equation");